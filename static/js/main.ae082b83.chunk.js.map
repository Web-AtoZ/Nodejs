{"version":3,"sources":["Components/Board/index.js","App.js","index.js"],"names":["Board","board_id","title","content","views","created_date","updated_date","border","align","width","prototype","PropTypes","number","isRequired","string","date","App","state","isLoading","boards","getBoardList","a","axios","get","boardList","data","_embedded","setState","this","map","board","console","log","key","React","Component","BoardForm","handleChange","e","target","name","value","insertBoard","post","handleSubmit","preventDefault","onSubmit","placeholder","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"oSAGA,SAASA,EAAT,GAA+E,IAA/DC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,QAA6C,EAApCC,MAAoC,EAA7BC,aAA6B,EAAfC,aAC7D,OAAO,6BACL,2BAAOC,OAAO,KACZ,+BACA,wBAAIC,MAAM,UACR,wBAAIC,MAAM,MAAV,sBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,iBAEF,4BACE,4BAAKR,GACL,4BAAKC,GACL,4BAAKC,OAObH,EAAMU,UAAY,CAChBT,SAAUU,IAAUC,OAAOC,WAC3BX,MAAOS,IAAUG,OAAOD,WACxBV,QAASQ,IAAUG,OAAOD,WAC1BT,MAAOO,IAAUC,OACjBP,aAAcM,IAAUI,KACxBT,aAAcK,IAAUI,MAGXf,QCzBTgB,E,2MACJC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,a,sBAAe,8BAAAC,EAAA,sEAE0CC,IAAMC,IACzD,mCAHS,gBAEqBC,EAFrB,EAENC,KAAOC,UAAYP,OAE1B,EAAKQ,SAAS,CAACR,OAAQK,EAAWN,WAAW,IAJhC,2C,mFAQbU,KAAKR,iB,+BAGG,IAAD,EACqBQ,KAAKX,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACI,6BACE,kBAAC,EAAD,MACA,6BACCD,EAAY,aAAeC,EAAOU,KAAI,SAAAC,GAErC,OADAC,QAAQC,IAAIF,GACL,kBAAC,EAAD,CAAOG,IAAKH,EAAM7B,SACXA,SAAU6B,EAAM7B,SAChBC,MAAO4B,EAAM5B,MACbC,QAAS2B,EAAM3B,QACfE,aAAcyB,EAAMzB,aACpBC,aAAcwB,EAAMxB,aACpBF,MAAO0B,EAAM1B,gB,GA/BrB8B,IAAMC,WAsClBC,E,2MACJnB,MAAQ,G,EACRoB,aAAe,SAACC,GACd,EAAKX,SAAL,eAAgBW,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,S,EAG3CC,Y,sBAAc,4BAAArB,EAAA,sEAEeC,IAAMqB,KAAK,8BAA+B,CACnEzC,MAAO,EAAKe,MAAMf,MAClBC,QAAS,EAAKc,MAAMd,UAJV,kBAELsB,KAFK,2C,EAQdmB,aAAe,SAACN,GACdA,EAAEO,iBACF,EAAKH,cACL,EAAKf,SAAS,K,wEAId,OAAQ,0BAAMmB,SAAUlB,KAAKgB,cAC3B,2BAAOG,YAAY,QAAQP,KAAK,QAAQQ,SAAUpB,KAAKS,eACvD,2BAAOU,YAAY,UAAUP,KAAK,UAAUQ,SAAUpB,KAAKS,eAC3D,4BAAQY,KAAK,UAAb,wC,GAxBkBf,IAAMC,WA8BfnB,ICtEfkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ae082b83.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Board({board_id, title, content, views, created_date, updated_date}) {\r\n  return <div>\r\n    <table border=\"1\">\r\n      <tbody>\r\n      <tr align=\"center\">\r\n        <td width=\"50\">글번호</td>\r\n        <td width=\"300\">제목</td>\r\n        <td width=\"300\">내용</td>\r\n      </tr>\r\n      <tr>\r\n        <td>{board_id}</td>\r\n        <td>{title}</td>\r\n        <td>{content}</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n}\r\n\r\nBoard.prototype = {\r\n  board_id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  views: PropTypes.number,\r\n  created_date: PropTypes.date,\r\n  updated_date: PropTypes.date,\r\n};\r\n\r\nexport default Board;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Board from \"./Components/Board/index\";\r\n\r\n// import BoardForm from \"./Components/Board/index\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    boards: []\r\n  };\r\n\r\n  getBoardList = async () => {\r\n    // data 이하의 값은 boards에 매칭된다.\r\n    const {data: {_embedded: {boards: boardList}}} = await axios.get(\r\n        \"http://localhost:8080/board/all\");\r\n    this.setState({boards: boardList, isLoading: false});\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBoardList();\r\n  };\r\n\r\n  render() {\r\n    const {isLoading, boards} = this.state;\r\n    return (\r\n        <div>\r\n          <BoardForm></BoardForm>\r\n          <br/>\r\n          {isLoading ? \"Loading...\" : boards.map(board => {\r\n            console.log(board);\r\n            return <Board key={board.board_id}\r\n                          board_id={board.board_id}\r\n                          title={board.title}\r\n                          content={board.content}\r\n                          created_date={board.created_date}\r\n                          updated_date={board.updated_date}\r\n                          views={board.views}/>\r\n          })}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass BoardForm extends React.Component {\r\n  state = {};\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  };\r\n\r\n  insertBoard = async () => {\r\n    // data 이하의 값은 boards에 매칭된다.\r\n    const {data: data} = await axios.post(\"http://localhost:8080/board\", {\r\n      title: this.state.title,\r\n      content: this.state.content\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.insertBoard();\r\n    this.setState({});\r\n  };\r\n\r\n  render() {\r\n    return (<form onSubmit={this.handleSubmit}>\r\n      <input placeholder=\"title\" name=\"title\" onChange={this.handleChange}/>\r\n      <input placeholder=\"content\" name=\"content\" onChange={this.handleChange}/>\r\n      <button type=\"submit\">글 저장하기</button>\r\n    </form>);\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}